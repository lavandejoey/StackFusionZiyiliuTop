
        document.addEventListener('DOMContentLoaded', function () {
            //     // -----------
            //     // CHART SETUP
            //     // -----------
            //     const baseChartOptions = {
            //         maintainAspectRatio: false,
            //         plugins: {
            //             legend: {display: false},
            //             tooltip: {
            //                 backgroundColor: 'rgba(0,0,0,0.9)',
            //                 titleFont: {size: 14},
            //                 bodyFont: {size: 12},
            //                 padding: 12,
            //                 displayColors: false
            //             }
            //         },
            //         scales: {
            //             x: {grid: {display: false}},
            //             y: {beginAtZero: true, grid: {color: 'rgba(0,0,0,0.05)'}}
            //         }
            //     };
            //
            //     // Helper functions for charts
            //     function buildHourlyChartData(visitors) {
            //         if (!visitors || !visitors.length) return {labels: [], datasets: []};
            //         // Set of all visitors' requestHourlyCounts keys
            //         const labels = Array.from(new Set(visitors.flatMap(v => Object.keys(v.requestHourlyCounts)))).sort();
            //         const datasets = visitors.map(visitor => ({
            //             label: `${visitor.ip} (${visitor.email || 'no email'})`,
            //             data: Object.keys(visitor.requestHourlyCounts).sort().map(k => visitor.requestHourlyCounts[k]),
            //             borderColor: randomColor(),
            //             tension: 0.1,
            //             fill: false
            //         }));
            //         return {labels, datasets};
            //     }
            //
            //     function buildDailyChartData(visitors) {
            //         if (!visitors || !visitors.length) {
            //             return {labels: [], datasets: []};
            //         }
            //         const allDailyKeys = Object.keys(visitors[0].requestDailyCounts).sort();
            //         const labels = allDailyKeys.map(d => new Date(d).toLocaleDateString());
            //         // sum across all visitors
            //         const data = allDailyKeys.map(dKey => {
            //             return visitors.reduce((sum, v) => sum + (v.requestDailyCounts[dKey] || 0), 0);
            //         });
            //
            //         return {
            //             labels,
            //             datasets: [{
            //                 label: 'Daily Requests',
            //                 data,
            //                 backgroundColor: 'rgba(54, 162, 235, 0.8)'
            //             }]
            //         };
            //     }
            //
            //
            //     function buildGeoChartData(visitors) {
            //         const counts = {};
            //         visitors.forEach(v => {
            //             const loc = v.location || 'Unknown';
            //             counts[loc] = (counts[loc] || 0) + totalRequests(v);
            //         });
            //         const labels = Object.keys(counts);
            //         const data = Object.values(counts);
            //         const bgColors = labels.map(() => randomColor());
            //         return {labels, datasets: [{data, backgroundColor: bgColors}]};
            //     }
            //
            //     function populateGeoList(visitors, listElementId) {
            //         const container = document.getElementById(listElementId);
            //         if (!container) return;
            //         container.innerHTML = '';
            //         const locationMap = {};
            //         visitors.forEach(v => {
            //             const loc = v.location || 'Unknown';
            //             locationMap[loc] = (locationMap[loc] || 0) + totalRequests(v);
            //         });
            //         const sortedLocations = Object.entries(locationMap).sort((a, b) => b[1] - a[1]);
            //         sortedLocations.forEach(([loc, count]) => {
            //             const li = document.createElement('li');
            //             li.className = 'list-group-item d-flex justify-content-between align-items-center';
            //             li.innerHTML = `${loc}<span class="badge bg-primary rounded-pill">${count}</span>`;
            //             container.appendChild(li);
            //         });
            //     }
            //
            //     function randomColor() {
            //         return `hsl(${Math.random() * 360}, 70%, 50%)`;
            //     }
            //
            //     function totalRequests(visitor) {
            //         return Object.values(visitor.requestHourlyCounts).reduce((a, b) => a + b, 0);
            //     }
            //
            //     // Initialize charts
            //     function createLineChart(canvasId, data) {
            //         const ctx = document.getElementById(canvasId);
            //         if (!ctx) return;
            //         new Chart(ctx, {
            //             type: 'line',
            //             data: data,
            //             options: {...baseChartOptions, responsive: true, interaction: {mode: 'index'}}
            //         });
            //     }
            //
            //     function createBarChart(canvasId, data) {
            //         const ctx = document.getElementById(canvasId);
            //         if (!ctx) return;
            //
            //         // Calculate max value for dynamic step size
            //         const maxValue = Math.max(...data.datasets[0].data);
            //         const stepSize = Math.ceil(maxValue / 10);
            //
            //         new Chart(ctx, {
            //             type: 'bar',
            //             data: data,
            //             options: {
            //                 ...baseChartOptions,
            //                 responsive: true,
            //                 scales: {
            //                     y: {
            //                         beginAtZero: true,
            //                         ticks: {
            //                             autoSkip: true,
            //                             maxTicksLimit: 20,
            //                             stepSize: stepSize > 0 ? stepSize : 1
            //                         },
            //                         grid: {color: 'rgba(0,0,0,0.05)'}
            //                     },
            //                     x: {grid: {display: false}}
            //                 }
            //             }
            //         });
            //     }
            //
            //     function createDoughnut(canvasId, data) {
            //         const ctx = document.getElementById(canvasId);
            //         if (!ctx) return;
            //         new Chart(ctx, {
            //             type: 'doughnut',
            //             data: data,
            //             options: {...baseChartOptions, cutout: '60%', plugins: {legend: {position: 'right'}}}
            //         });
            //     }
            //
            //     // Create charts for each tab
            //     createLineChart('all-hourly-chart', buildHourlyChartData(allVisitLogData));
            //     createBarChart('all-daily-chart', buildDailyChartData(allVisitLogData));
            //     createDoughnut('all-geo-chart', buildGeoChartData(allVisitLogData));
            //     populateGeoList(allVisitLogData, 'all-geo-list');
            //
            //     createLineChart('de-hourly-chart', buildHourlyChartData(deVisitLogData));
            //     createBarChart('de-daily-chart', buildDailyChartData(deVisitLogData));
            //     createDoughnut('de-geo-chart', buildGeoChartData(deVisitLogData));
            //     populateGeoList(deVisitLogData, 'de-geo-list');
            //
            //     createLineChart('us-hourly-chart', buildHourlyChartData(usVisitLogData));
            //     createBarChart('us-daily-chart', buildDailyChartData(usVisitLogData));
            //     createDoughnut('us-geo-chart', buildGeoChartData(usVisitLogData));
            //     populateGeoList(usVisitLogData, 'us-geo-list');
            //
            //     // -----------
            //     // DOMAINS TAB
            //     // -----------
            //     const all = [...allVisitLogData];
            //     const domainTableBody = document.querySelector('#domains-table tbody');
            //     let visitRows = [];
            //     all.forEach(visitor => {
            //         Object.entries(visitor.domains).forEach(([domain, count]) => {
            //             visitRows.push({
            //                 domain,
            //                 email: visitor.email,
            //                 server: visitor.server,
            //                 count,
            //                 location: visitor.location
            //             });
            //         });
            //     });
            //
            //     function renderDomainRows(rows) {
            //         domainTableBody.innerHTML = '';
            //         rows.forEach(row => {
            //             const tr = document.createElement('tr');
            //             tr.innerHTML = `
            //             <td class="text-truncate">${row.domain}</td>
            //             <td class="text-truncate">${row.email}</td>
            //             <td class="text-truncate">${row.server}</td>
            //             <td class="text-truncate">${row.count}</td>
            //             <td class="text-truncate">${row.location || 'Unknown'}</td>
            //         `;
            //             domainTableBody.appendChild(tr);
            //         });
            //     }
            //
            //     // Populate email filter dropdown
            //     const emailSet = new Set([]);
            //     all.forEach(visitor => emailSet.add(visitor.email));
            //     const emailFilter = document.getElementById('emailFilter');
            //     emailSet.forEach(email => {
            //         const option = document.createElement('option');
            //         option.value = email;
            //         option.textContent = email;
            //         emailFilter.appendChild(option);
            //     });
            //
            //     // Event listeners for filtering and sorting
            //     const domainSearchInput = document.getElementById('domainSearchInput');
            //     const serverFilter = document.getElementById('serverFilter');
            //     const sortCountBtn = document.getElementById('sortCountBtn');
            //     const sortEmailBtn = document.getElementById('sortEmailBtn');
            //     const sortDomainBtn = document.getElementById('sortDomainBtn');
            //
            //     let sortBy = 'count';
            //     let sortDesc = false;
            //
            //     function applyFilters() {
            //         const searchVal = domainSearchInput.value.toLowerCase();
            //         const selectedEmail = emailFilter.value;
            //         const selectedServer = serverFilter.value;
            //
            //         let filtered = visitRows.filter(row => {
            //             const matchesDomain = row.domain.toLowerCase().includes(searchVal);
            //             const matchesEmail = selectedEmail === 'all' || row.email === selectedEmail;
            //             const matchesServer = selectedServer === 'all' || row.server === selectedServer;
            //             return matchesDomain && matchesEmail && matchesServer;
            //         });
            //
            //         // Sort rows
            //         if (sortBy === 'count') {
            //             filtered.sort((a, b) => sortDesc ? b.count - a.count : a.count - b.count);
            //         } else if (sortBy === 'email') {
            //             filtered.sort((a, b) => sortDesc ? b.email.localeCompare(a.email) : a.email.localeCompare(b.email));
            //         } else if (sortBy === 'domain') {
            //             filtered.sort((a, b) => sortDesc ? b.domain.localeCompare(a.domain) : a.domain.localeCompare(b.domain));
            //         }
            //
            //         renderDomainRows(filtered);
            //     }
            //
            //     domainSearchInput.addEventListener('input', applyFilters);
            //     emailFilter.addEventListener('change', applyFilters);
            //     serverFilter.addEventListener('change', applyFilters);
            //
            //     sortCountBtn.addEventListener('click', () => {
            //         sortBy = 'count';
            //         sortDesc = !sortDesc;
            //         applyFilters();
            //     });
            //
            //     sortEmailBtn.addEventListener('click', () => {
            //         sortBy = 'email';
            //         sortDesc = !sortDesc;
            //         applyFilters();
            //     });
            //
            //     sortDomainBtn.addEventListener('click', () => {
            //         sortBy = 'domain';
            //         sortDesc = !sortDesc;
            //         applyFilters();
            //     });
            //
            //
            //     // Initial render
            //     renderDomainRows(visitRows);
        });
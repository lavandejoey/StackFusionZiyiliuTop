extends layout

block content
    // Mobile view
    .d-lg-none.my-4.mx-3
        .row
            // Upper content
            .container.rounded-5.bg-white.bg-opacity-0.border.border-primary.px-3.py-4.mt-4
                .row.my-2.mx-3
                    .col-4.d-flex.justify-content-center.align-items-center
                        img.rounded-4(src=pageData.contact.portraitSrc, alt=pageData.contact.portraitAlt, style='scale: 1.2; object-fit: cover;' width='80px' height='80px')
                    .col-8.d-flex.flex-column.justify-content-center.align-items-center
                        h1(title=pageData.contact.name)= pageData.contact.name
                        p.my-0.py-0.title= pageData.contact.title
                .container.d-flex.justify-content-center.align-items-center
                    hr.w-75
                ul.row.d-flex.justify-content-between.align-items-center.m-0.p-0
                    each contactField in [['email', 'fa-envelope', 'mailto:' + pageData.contact.email], ['phone', 'fa-phone', 'tel:' + pageData.contact.phone.replaceAll("&nbsp;","")], ['birthday', 'fa-calendar-alt'], ['location', 'fa-map-marker-alt']]
                        .li.col-12.col-sm-6.my-1
                            .row
                                .col-2.d-flex.justify-content-center.align-items-center
                                    i.fas(class=contactField[1])
                                .col-10
                                    //p.my-0.text-start.text-muted= __(contactField[0])
                                    p.my-0.text-start(class=contactField[0] === 'location' ? '' : 'text-truncate')
                                        if contactField[2]
                                            a.contact-link(href=contactField[2] style='text-decoration: none;')= pageData.contact[contactField[0]]
                                        else
                                            = pageData.contact[contactField[0]]
            // About Me and Sections
            // SVG Container for the line
            svg.d-none.d-sm-block#timeline-line-sm(style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; z-index: 1; pointer-events: none;")
            .container.rounded-5.bg-white.bg-opacity-0.border.border-primary.px-3.py-4.mt-4(style="z-index: 0;")
                .container
                    h2.mb-3= __("About Me")
                    p(style='text-align: justify;')= pageData.aboutMe1
                    p(style='text-align: justify;')= pageData.aboutMe2
                // Education Section
                .container
                    // Short thick line
                    hr.w-25.bg-primary
                    .container.w-25.mx-0.my-3.p-0.pe-2.d-flex.justify-content-between.align-items-center
                        .d-flex.justify-content-center.align-items-center
                            i.fas.fa-solid.fa-book.fa-2x#book-icon-sm(style='z-index: 99;')
                        h2.mb-1.mx-3.p-0.text-nowrap= __("Education")
                    each education in pageData.educations
                        .container.mb-3
                            .row.mb-2
                                .col-auto.offset-1.d-flex.justify-content-center.align-items-center.d-none.d-sm-block
                                    img.m-0.p-0(src=education.logoSrc, alt=education.logoAlt, class='school-logo', style='width: 30px; height: 30px; margin-right: 10px;' title=education.logoTitle)
                                .col-auto.m-0.p-0
                                    strong.m-0= education.institution
                            .row
                                .col-1.d-flex.justify-content-start.align-items-center.d-none.d-sm-block
                                    i.fas.fa-solid.fa-circle.fa-2xs.education-circle-sm(style='z-index: 99;')
                                .col-12.col-md-10.col-xl-8.d-sm-flex.justify-content-between.align-items-center
                                    p.m-0.text-muted= education.start + ' – ' + education.end
                                    p.m-0.text-muted
                                        i.fa.fa-map-marker-alt
                                        | &nbsp; #{education.location}
                            .row
                                .col-12.col-sm-10.offset-sm-1
                                    each title in education.titles
                                        p.m-0= title

                // Internships Section
                .container
                    // Short thick line
                    hr.w-25.bg-primary
                    .container.w-25.mx-0.my-3.p-0.pe-2.d-flex.justify-content-between.align-items-center
                        .d-flex.justify-content-center.align-items-center
                            i.fas.fa-briefcase.fa-2x#briefcase-icon-sm(style='z-index: 99;')
                        h2.mb-1.mx-3.p-0.text-nowrap= __("Internships")
                    each internship in pageData.internships
                        .container.mb-3
                            .row.mb-2
                                .col-auto.offset-1.d-flex.justify-content-center.align-items-center.d-none.d-sm-block
                                    img.m-0.p-0(src=internship.logoSrc, alt=internship.logoAlt, class="company-logo", style="width: 30px; height: 30px; margin-right: 10px;", title=internship.logoTitle)
                                .col-auto.m-0.p-0
                                    strong.m-0= internship.institution
                            .row
                                .col-1.d-flex.justify-content-start.align-items-center.d-none.d-sm-block
                                    i.fas.fa-solid.fa-circle.fa-2xs.internship-circle-sm(style='z-index: 99;')
                                .col-12.col-md-10.col-xl-8.d-sm-flex.justify-content-between.align-items-center
                                    p.m-0.text-muted= internship.start + ' – ' + internship.end
                                    p.m-0.text-muted
                                        i.fa.fa-map-marker-alt
                                        | &nbsp; #{internship.location}
                            .row
                                .col-12.col-sm-10.offset-sm-1
                                    each title in internship.titles
                                        p.m-0= title


    // Desktop view
    .d-none.d-lg-block.m-5.px-5
        // Left sidebar
        .container.py-3.position-fixed.fixed-container.rounded-5.bg-white.bg-opacity-0.border.border-primary
            .container.d-flex.flex-wrap.align-content-around
                .container.my-5.d-flex.justify-content-center.align-items-center
                    img.rounded-4(src=pageData.contact.portraitSrc, alt=pageData.contact.portraitAlt, style='scale: 1.2; object-fit: cover;' width='120px' height='120px')
                .container.d-flex.flex-column.justify-content-center.align-items-center
                    h1(title=pageData.contact.name)= pageData.contact.name
                    p.my-0.py-0.title= pageData.contact.title
            .container.d-flex.justify-content-center.align-items-center
                hr.w-75
            .container.d-flex.justify-content-center.align-items-center
                // Contact information, left-aligned text
                ul.container.m-auto.p-auto
                    each contactField in [['email', 'fas fa-envelope', 'mailto:' + pageData.contact.email], ['phone', 'fas fa-phone', 'tel:' + pageData.contact.phone], ['birthday', 'fas fa-calendar-alt'], ['location', 'fas fa-map-marker-alt']]
                        li.row.my-4
                            .col-3.d-flex.justify-content-center.align-items-center
                                i(class=contactField[1])
                            .col-9
                                //p.my-0.text-start.text-muted= __(contactField[0])
                                p.my-0.text-start(class=contactField[0] === 'location' ? '' : 'text-truncate')
                                    if contactField[2]
                                        a.contact-link(href=contactField[2] style='text-decoration: none;') #{pageData.contact[contactField[0]]}
                                    else
                                        = pageData.contact[contactField[0]]

        // Right content
        // SVG Container for the line
        svg#timeline-line-lg(style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; z-index: 1; pointer-events: none;")
        .container.dynamic-content-container.px-5.py-4.rounded-5.bg-white.bg-opacity-0.border.border-primary(style="z-index: 0;")
            .container
                h2.mb-3= __("About Me")
                p(style='text-align: justify;')= pageData.aboutMe1
                p(style='text-align: justify;')= pageData.aboutMe2
            // Education Section
            .container
                // Short thick line
                hr.w-25.bg-primary
                .container.w-25.mx-0.my-3.p-0.pe-2.d-flex.justify-content-between.align-items-center
                    .d-flex.justify-content-center.align-items-center
                        i.fas.fa-solid.fa-book.fa-2x#book-icon-lg(style='z-index: 99;')
                    h2.mb-1.mx-3.p-0.text-nowrap= __("Education")
                each education in pageData.educations
                    .container.mb-3
                        .row.mb-2
                            .col-auto.offset-1.d-flex.justify-content-center.align-items-center.d-none.d-sm-block
                                img.m-0.p-0(src=education.logoSrc, alt=education.logoAlt, class='school-logo', style='width: 30px; height: 30px; margin-right: 10px;' title=education.logoTitle)
                            .col-auto.m-0.p-0.d-flex.align-items-center
                                strong.m-0= education.institution
                        .row
                            .col-1.d-flex.justify-content-start.align-items-center.d-none.d-sm-block
                                i.fas.fa-solid.fa-circle.fa-2xs.education-circle-lg(style='z-index: 99;')
                            .col-12.col-md-10.col-xl-8.d-sm-flex.justify-content-between.align-items-center
                                p.m-0.text-muted= education.start + ' – ' + education.end
                                p.m-0.text-muted
                                    i.fa.fa-map-marker-alt
                                    | &nbsp; #{education.location}
                        .row
                            .col-12.col-sm-10.offset-sm-1
                                each title in education.titles
                                    p.m-0= title

            // Internships Section
            .container
                // Short thick line
                hr.w-25.bg-primary
                .container.w-25.mx-0.my-3.p-0.pe-2.d-flex.justify-content-between.align-items-center
                    .d-flex.justify-content-center.align-items-center
                        i.fas.fa-briefcase.fa-2x#briefcase-icon-lg(style='z-index: 99;')
                    h2.mb-1.mx-3.p-0.text-nowrap= __("Internships")
                each internship in pageData.internships
                    .container.mb-3
                        .row.mb-2
                            .col-auto.offset-1.d-flex.justify-content-center.align-items-center.d-none.d-sm-block
                                img.m-0.p-0(src=internship.logoSrc, alt=internship.logoAlt, class="company-logo", style="width: 30px; height: 30px; margin-right: 10px;", title=internship.logoTitle)
                            .col-auto.m-0.p-0
                                strong.m-0= internship.institution
                        .row
                            .col-1.d-flex.justify-content-start.align-items-center.d-none.d-sm-block
                                i.fas.fa-solid.fa-circle.fa-2xs.internship-circle-lg(style='z-index: 99;')
                            .col-12.col-md-10.col-xl-8.d-sm-flex.justify-content-between.align-items-center
                                p.m-0.text-muted= internship.start + ' – ' + internship.end
                                p.m-0.text-muted
                                    i.fa.fa-map-marker-alt
                                    | &nbsp; #{internship.location}
                        .row
                            .col-12.col-sm-10.offset-sm-1
                                each title in internship.titles
                                    p.m-0= title

    script.
        function adjustFixedContainerWidth() {
            const parentElement = document.querySelector('.d-none.d-lg-block');
            const leftSidebar = document.querySelector('.fixed-container');
            const rightContent = document.querySelector('.dynamic-content-container');

            if (parentElement && leftSidebar && rightContent) {
                // Get parent width and padding
                const parentWidth = parentElement.clientWidth;
                const padding = parseFloat(getComputedStyle(parentElement).paddingLeft) +
                    parseFloat(getComputedStyle(parentElement).paddingRight);

                // Available width inside the parent container
                const availableWidth = parentWidth - padding;

                let sidebarWidth = Math.min(400, Math.max(250, availableWidth * 0.2)); // Between 300px and 400px
                const gap = Math.min(50, availableWidth * 0.05); // Dynamic gap, capped at 50px
                const rightWidth = availableWidth - sidebarWidth - gap;

                // Apply styles
                rightContent.style.width = `${rightWidth}px`;
                rightContent.style.marginLeft = `${sidebarWidth + gap}px`;
                leftSidebar.style.width = `${sidebarWidth}px`;

            } else {
                console.error("Required elements not found.");
            }
        }

        function processTimeline(elements) {
            const {bookIcon, internIcon, educationCircles, internshipCircles, svg} = elements;

            if (!bookIcon || educationCircles.length === 0 || !internIcon || internshipCircles.length === 0 || !svg) {
                console.error("Required elements not found.");
                return; // Exit if the required elements are not found
            }

            // Process Education timeline
            createLineBetweenElements(bookIcon, educationCircles[educationCircles.length - 1], svg);

            // Process Internships timeline
            createLineBetweenElements(internIcon, internshipCircles[internshipCircles.length - 1], svg);
        }

        function createLineBetweenElements(iconElement, circleElement, svgElement) {
            const iconRect = iconElement.getBoundingClientRect();
            const circleRect = circleElement.getBoundingClientRect();
            const svgRect = svgElement.getBoundingClientRect();

            // Calculate positions
            const iconBottomY = iconRect.bottom - svgRect.top;
            const circleCenterY = circleRect.top + circleRect.height / 2 - svgRect.top;
            const circleX = circleRect.left + circleRect.width / 2 - svgRect.left;

            // Create a line element
            const line = document.createElementNS("http://www.w3.org/2000/svg", "line");
            line.setAttribute("x1", circleX);
            line.setAttribute("x2", circleX);
            line.setAttribute("y1", iconBottomY);
            line.setAttribute("y2", circleCenterY);
            line.setAttribute("stroke", "gray");
            line.setAttribute("stroke-width", "1");

            // Append the line to the SVG
            svgElement.appendChild(line);
        }

        adjustFixedContainerWidth();
        document.addEventListener("DOMContentLoaded", function () {
            // Process for large screens
            processTimeline({
                bookIcon: document.querySelector("#book-icon-lg"),
                internIcon: document.querySelector("#briefcase-icon-lg"),
                educationCircles: document.querySelectorAll(".education-circle-lg"),
                internshipCircles: document.querySelectorAll(".internship-circle-lg"),
                svg: document.querySelector("#timeline-line-lg")
            });

            // Process for small screens
            processTimeline({
                bookIcon: document.querySelector("#book-icon-sm"),
                internIcon: document.querySelector("#briefcase-icon-sm"),
                educationCircles: document.querySelectorAll(".education-circle-sm"),
                internshipCircles: document.querySelectorAll(".internship-circle-sm"),
                svg: document.querySelector("#timeline-line-sm")
            });
        });

        // Reload the lines when the window is resized
        window.addEventListener('resize', function () {
            // Adjust the width of the fixed container
            adjustFixedContainerWidth();

            const svg = document.querySelector("#timeline-line-lg") || document.querySelector("#timeline-line-sm");
            if (svg) {
                // Remove all lines
                while (svg.lastChild) {
                    svg.removeChild(svg.lastChild);
                }

                // Process for large screens
                processTimeline({
                    bookIcon: document.querySelector("#book-icon-lg"),
                    internIcon: document.querySelector("#briefcase-icon-lg"),
                    educationCircles: document.querySelectorAll(".education-circle-lg"),
                    internshipCircles: document.querySelectorAll(".internship-circle-lg"),
                    svg: svg
                });

                // Process for small screens
                processTimeline({
                    bookIcon: document.querySelector("#book-icon-sm"),
                    internIcon: document.querySelector("#briefcase-icon-sm"),
                    educationCircles: document.querySelectorAll(".education-circle-sm"),
                    internshipCircles: document.querySelectorAll(".internship-circle-sm"),
                    svg: document.querySelector("#timeline-line-sm")
                });
            } else {
                console.error("SVG element not found.");
            }
        });
